#!/usr/bin/python3

# this script is used to do reverse compliment of DNA sequence

# importing necessary modules
import sys
from string import printable

# variables used in script
seq_list = []
IUB_nucleotide_code = ['A', 'T', 'C', 'G', 'R', 'Y', 'K', 'M', 'S', 'W', 'B', 'D', 'H', 'V', 'N',
                       'a', 't', 'c', 'g', 'r', 'y', 'k', 'm', 's', 'w', 'b', 'd', 'h', 'v', 'n']
complement_dict = {'A': 'T', 'C': 'G', 'T': 'A', 'G': 'C', 'N': 'N', 'S': 'S', 'R': 'Y', 'Y': 'R'}
output_file_name, sequence = '', []


# functions used in script
def reverse(seq):
    """Returns a reversed string"""
    return seq[::-1]


def complement(seq):
    """Returns a complement DNA sequence"""
    seq_list = [complement_dict[base] for base in list(seq)]
    return ''.join(seq_list)


def reverse_complement(seq):
    """Returns a reverse complement DNA sequence"""
    seq = reverse(seq)
    seq = complement(seq)
    return seq


def reformatseq(seq_line):
    seq_line = ''.join(i.upper() for x in seq_line.split() for i in x if i in IUB_nucleotide_code)
    seq_list.append(''.join(seq_line))
    return seq_list


def return_only_printable_symbols(seq_list):
    text = ''.join(char for char in ''.join(seq_list) if char in printable)
    text = reverse_complement(text)
    seq_list = [text[i:i + 60] for i in range(0, len(text), 60)]
    return seq_list


# the main code
try:
    with open(sys.argv[1], 'r') as file:  # this line is used for a script as python3 myscript.py file.txt
        for line in file:
            if line.startswith('>'):  # it is a header
                output_file_name = line.strip()
            else:
                sequence = reformatseq(line)
        sequence = return_only_printable_symbols(sequence)
        if output_file_name == '':
            output_file_name = ''.join(sys.argv[1].strip().split('.')[:-1])  # we take the header from file name
except IndexError:
    for line in sys.stdin:  # this line is used for running script as an input from cat function
        if line.startswith('>'):  # it is a header
            output_file_name = line.strip() # we will take this as a header
        else:
            sequence = reformatseq(line)
    sequence = return_only_printable_symbols(sequence)
    if output_file_name == '':
        output_file_name = 'your_fasta_sequence'  # we will take this as a header

# writing to a file
with open('{}_reversed.fa'.format(output_file_name.strip('>').replace(' ', '_')), 'w') as f:
    print('>' + output_file_name + '_reversed', file=f)
    for i in sequence:
        print(i, file=f)

# printing sequence to the terminal
with open('{}_reversed.fa'.format(output_file_name.strip('>').replace(' ', '_')), 'r') as seq_file:
    print(seq_file.read())
